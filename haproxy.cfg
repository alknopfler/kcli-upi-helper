{%- if ':' in api_ip %}
{%- set api_ip = '[' + api_ip + ']' %}
{%- endif %}
{%- if ':' in ingress_ip %}
{%- set ingress_ip = '[' + ingress_ip + ']' %}
{%- endif %}
global
    log         127.0.0.1 local2
    maxconn     4000
    daemon

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

listen stats-50000
    bind *:50000
    mode            http
    log             global
    maxconn 10
    timeout client  100s
    timeout server  100s
    timeout connect 100s
    # timeout queue   100s
    stats enable
    stats hide-version
    stats refresh 30s
    stats show-node
    stats auth admin:password
    stats uri  /haproxy?stats

listen api-6443
    bind :::6443 v4v6
    mode tcp
    balance source
    server bootstrap {{ cluster }}-bootstrap.{{ cluster }}.{{ domain }}:6443 check inter 1s
{%- for num in range(0, masters) %}
    server master-{{ num }} {{ cluster }}-master-{{ num }}.{{ cluster }}.{{ domain }}:6443 check inter 1s
{%- endfor %}

listen machineconfig-22623
    bind :::22623 v4v6
    mode tcp
    balance source
    server bootstrap {{ cluster }}-bootstrap.{{ cluster }}.{{ domain }}:22623 check inter 1s
{%- for num in range(0, masters) %}
    server master-{{ num }} {{ cluster }}-master-{{ num }}.{{ cluster }}.{{ domain }}:22623 check inter 1s
{%- endfor %}

listen ingress-router-80
    bind :::80 v4v6
    mode tcp
    balance source
{%- for num in range(0, workers) %}
    server worker-{{ num }} {{ cluster }}-worker-{{ num }}.{{ cluster }}.{{ domain }}:80 check inter 1s
{%- endfor %}

listen ingress-router-443
    bind :::443 v4v6
    mode tcp
    balance source
{%- for num in range(0, workers) %}
    server worker-{{ num }} {{ cluster }}-worker-{{ num }}.{{ cluster }}.{{ domain }}:443 check inter 1s
{%- endfor %}
